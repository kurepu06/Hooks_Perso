#!/usr/bin/env bash
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

# Unset variables produce errors
set -u

# Redirect output to stderr.
exec 1>&2

EXIT_STATUS=0

# Check that all changed *.ini files are encrypted
# read: -r do not allow backslashes to escape characters; -d delimiter
while IFS= read -r -d $'\0' file; do
	[[ "$file" != *inventory/*.ini ]] && continue
	# cut gets symbols 1-2
	file_status=$(git status --porcelain -- "$file" 2>&1 | cut -c1-2)
	file_status_index=${file_status:0:1}
	file_status_worktree=${file_status:1:1}
	[[ "$file_status_worktree" != ' ' ]] && {
    
		# echo "ERROR: *.ini file is modified in worktree but not added to the index: $file"
		# echo "Can not check if it is properly encrypted. Use git add or git stash to fix this."
		EXIT_STATUS=1
	}
	# check is neither required nor possible for deleted files
	[[ "$file_status_index" = 'D' ]] && continue
	head -1 "$file" | grep --quiet '^\$ANSIBLE_VAULT;' || {
    vaultPath=${file%*inventory*}
    #echo "$vaultPath"
    if [[ -f "$vaultPath/vault_pass.txt" ]]
    then
        echo "ERROR: non-encrypted *.ini file: $file"
        echo "/!\ WARNING /!\: We will encrypt the file : $file"
        echo "Tap ^c for interrupt the execution, if you don't want."
        exec ansible-vault encrypt "$file"

		    EXIT_STATUS=1
    else 
        EXIT_STATUS=0
    fi
		
	}
done < <(git diff --cached --name-only -z "4b825dc642cb6eb9a060e54bf8d69288fbee4904")

exit $EXIT_STATUS
